package ru.spbstu.movierecbot.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Mono;
import reactor.core.scheduler.Schedulers;
import ru.spbstu.movierecbot.dao.filmapi.FilmDao;
import ru.spbstu.movierecbot.dao.pg.WatchListDao;
import ru.spbstu.movierecbot.dbClasses.tables.records.WatchListRecord;

import java.util.List;
import java.util.Stack;

@Service
public class WatchListService {
    private final WatchListDao watchListDao;
    private final FilmDao filmDao;

    @Autowired
    public WatchListService(WatchListDao watchListDao, FilmDao filmDao) {
        this.watchListDao = watchListDao;
        this.filmDao = filmDao;
    }

    //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /showWatchList
    public Mono<String> showWatchList(long telegramId) {
        return Mono.fromCallable(() -> {
            List<WatchListRecord> watchFilmList = watchListDao.getWatchlistByTelegramId(telegramId);

            if (watchFilmList.isEmpty()) {
                return "üì≠ <b>–í–∞—à —Å–ø–∏—Å–æ–∫ \"–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å\" –ø—É—Å—Ç</b>\n" +
                        "–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ñ–∏–ª—å–º —Å –ø–æ–º–æ—â—å—é /addToWatchList";
            }

            StringBuilder result = new StringBuilder();
            result.append("üìã <b>–í–∞—à —Å–ø–∏—Å–æ–∫ \"–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å\":</b>\n\n");
            watchFilmList.forEach(film -> {
                result.append("‚Ä¢ ").append(film.getTitle());
                result.append("\n");
            });
            return result.toString();
        }).subscribeOn(Schedulers.boundedElastic());
    }

    //–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /addToWatchList
    public Mono<String> addToWatchList(long telegramId, String filmTitle) {
        return filmDao.getFilmByName(filmTitle)
                .flatMap(filmDto -> Mono.fromCallable(() -> {
                            if (watchListDao.addToWatchlist(telegramId, filmDto.id(), filmDto.russianTitle()) != 0) {
                                return "‚úÖ –§–∏–ª—å–º \"" + filmDto.russianTitle() +
                                        "\" –¥–æ–±–∞–≤–ª–µ–Ω –≤ \"–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å\"! üé¨";
                            } else {
                                return "‚ÑπÔ∏è –§–∏–ª—å–º \"" + filmDto.russianTitle() +
                                        "\" —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ \"–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å\"";
                            }
                        })
                        .subscribeOn(Schedulers.boundedElastic())) // –í—ã–Ω–æ—Å–∏–º –±–ª–æ–∫–∏—Ä—É—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
                .onErrorResume(error -> Mono.just("‚ö†Ô∏è –§–∏–ª—å–º \"" + filmTitle +
                        "\" –Ω–µ –Ω–∞–π–¥–µ–Ω\n–°–ø–∏—Å–æ–∫ \"–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å\" –Ω–µ –∏–∑–º–µ–Ω—ë–Ω"));
    }

    //–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /deleteFromWatchList
    public Mono<String> deleteFromWatchList(long telegramId, String filmTitle) {
        return Mono.fromCallable(() -> watchListDao.deleteFromWatchList(telegramId, filmTitle))
                .subscribeOn(Schedulers.boundedElastic())
                .flatMap(result -> {
                    if (result != 0) {
                        return Mono.just("üóëÔ∏è –§–∏–ª—å–º \"" + filmTitle +
                                "\" —É–¥–∞–ª—ë–Ω –∏–∑ \"–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å\"");
                    } else {
                        return Mono.just("üîç –§–∏–ª—å–º–∞ \"" + filmTitle +
                                "\" –Ω–µ –±—ã–ª–æ –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ \"–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å\"");
                    }
                })
                .onErrorResume(e -> Mono.just("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞"));
    }
}

