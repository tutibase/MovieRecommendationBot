package ru.spbstu.movierecbot.services;

import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import reactor.core.publisher.Mono;

import java.util.ArrayList;
import java.util.List;

@Service
public class KeyboardService {
    public Mono<ReplyKeyboardMarkup> menuKeyboardMarkup(){
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();


        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üé• –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"));
        row1.add(new KeyboardButton("‚≠ê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"));


        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üîç –ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º—ã"));
        row2.add(new KeyboardButton("üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã"));


        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üìã –ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å"));

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);

        keyboardMarkup.setKeyboard(keyboard);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return Mono.just(keyboardMarkup);
    }

    public Mono<ReplyKeyboardMarkup> searchKeyboardMarkup() {
        ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup();
        keyboard.setResizeKeyboard(true);
        keyboard.setOneTimeKeyboard(false);

        List<KeyboardRow> rows = new ArrayList<>();

        // –ü–µ—Ä–≤—ã–π —Ä—è–¥
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üéõÔ∏è –ü–æ–∏—Å–∫ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º"));
        row1.add(new KeyboardButton("‚ù§Ô∏è –ü–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º"));

        // –í—Ç–æ—Ä–æ–π —Ä—è–¥
        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º"));

        rows.add(row1);
        rows.add(row2);

        keyboard.setKeyboard(rows);
        return Mono.just(keyboard);
    }

    public Mono<ReplyKeyboardMarkup> watchListKeyboardMarkup() {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üëÄ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫"));
        row1.add(new KeyboardButton("üé• –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º—ã"));

        keyboard.add(row1);
        keyboard.add(row2);

        keyboardMarkup.setKeyboard(keyboard);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return Mono.just(keyboardMarkup);
    }

    public Mono<ReplyKeyboardMarkup> preferencesKeyboardMarkup() {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è"));
        row1.add(new KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è"));

        keyboard.add(row1);
        keyboard.add(row2);

        keyboardMarkup.setKeyboard(keyboard);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return Mono.just(keyboardMarkup);
    }

    public Mono<ReplyKeyboardMarkup> watchedListKeyboardMarkup() {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫"));
        row1.add(new KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚≠ê –û—Ü–µ–Ω–∏—Ç—å —Ñ–∏–ª—å–º"));
        row2.add(new KeyboardButton("‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤"));

        keyboard.add(row1);
        keyboard.add(row2);

        keyboardMarkup.setKeyboard(keyboard);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return Mono.just(keyboardMarkup);
    }

    public Mono<ReplyKeyboardMarkup> addPreferencesKeyboardMarkup() {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üé≠ –ñ–∞–Ω—Ä—ã"));
        row1.add(new KeyboardButton("üë®‚Äçüé§ –ê–∫—Ç–µ—Ä—ã"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üåç –°—Ç—Ä–∞–Ω—ã"));
        row2.add(new KeyboardButton("üìÖ –ì–æ–¥—ã"));

        keyboard.add(row1);
        keyboard.add(row2);

        keyboardMarkup.setKeyboard(keyboard);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return Mono.just(keyboardMarkup);
    }

    public Mono<ReplyKeyboardMarkup> deletePreferencesKeyboardMarkup() {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üé≠ –£–¥–∞–ª–∏—Ç—å –∂–∞–Ω—Ä—ã"));
        row1.add(new KeyboardButton("üë®‚Äçüé§ –£–¥–∞–ª–∏—Ç—å –∞–∫—Ç–µ—Ä–æ–≤"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üåç –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—ã"));
        row2.add(new KeyboardButton("üìÖ –£–¥–∞–ª–∏—Ç—å –≥–æ–¥—ã"));

        keyboard.add(row1);
        keyboard.add(row2);

        keyboardMarkup.setKeyboard(keyboard);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return Mono.just(keyboardMarkup);
    }

    public Mono<ReplyKeyboardMarkup> showWatchedPeriodKeyboardMarkup() {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("‚è≥ 3 –º–µ—Å—è—Ü–∞"));
        row1.add(new KeyboardButton("üóìÔ∏è –ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üéâ –ü—Ä–æ—à–ª—ã–π –≥–æ–¥"));
        row2.add(new KeyboardButton("üèÜ –í—Å–µ –≤—Ä–µ–º—è"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üîç –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞—Ç—ã"));

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);

        keyboardMarkup.setKeyboard(keyboard);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return Mono.just(keyboardMarkup);
    }


    public Mono<ReplyKeyboardMarkup> getFiltersKeyboard() {
        ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup();
        keyboard.setResizeKeyboard(true);
        keyboard.setOneTimeKeyboard(false);

        List<KeyboardRow> rows = new ArrayList<>();

        // –ü–µ—Ä–≤—ã–π —Ä—è–¥
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üéâ –ñ–∞–Ω—Ä—ã"));
        row1.add(new KeyboardButton("üåü –ê–∫—Ç–µ—Ä—ã"));

        // –í—Ç–æ—Ä–æ–π —Ä—è–¥
        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚≠ê –†–µ–π—Ç–∏–Ω–≥"));
        row2.add(new KeyboardButton("‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"));

        // –¢—Ä–µ—Ç–∏–π —Ä—è–¥
        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üóìÔ∏è –ì–æ–¥—ã"));
        row3.add(new KeyboardButton("üåç –°—Ç—Ä–∞–Ω–∞"));

        // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —Ä—è–¥
        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å"));
        row4.add(new KeyboardButton("\uD83D\uDC40 –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å"));

        rows.add(row1);
        rows.add(row2);
        rows.add(row3);
        rows.add(row4);

        keyboard.setKeyboard(rows);
        return Mono.just(keyboard);
    }


    public Mono<String> getCommandFromKeyboard(String text) {
        return switch (text) {
            // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            case "üé• –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é" -> Mono.just("/infoaboutfilm");
            case "‚≠ê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" -> Mono.just("/preferences");
            case "üîç –ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º—ã" -> Mono.just("/searchfilm");
            case "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã" -> Mono.just("/watchedlist");
            case "üìã –ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å" -> Mono.just("/watchlist");

            // –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤
            case "üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º" -> Mono.just("/searchRandom");
            case "üéõÔ∏è –ü–æ–∏—Å–∫ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º" -> Mono.just("/searchByFilters");
            case "‚ù§Ô∏è –ü–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º" -> Mono.just("/searchByPref");

            // –°–ø–∏—Å–æ–∫ "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å"
            case "üëÄ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫" -> Mono.just("/showWatchList");
            case "üé• –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º" -> Mono.just("/addToWatchList");
            case "‚ùå –£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º—ã" -> Mono.just("/deleteFromWatchList");

            // –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            case "üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è" -> Mono.just("/showMyPreferences");
            case "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è" -> Mono.just("/addPreferences");
            case "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è" -> Mono.just("/deletePreferences");

            // –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã
            case "üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫" -> Mono.just("/showWatchedFilmsList");
            case "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º" -> Mono.just("/addToWatchedFilmsList");
            case "‚≠ê –û—Ü–µ–Ω–∏—Ç—å —Ñ–∏–ª—å–º" -> Mono.just("/addMarkToWatchedFilm");
            case "‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤" -> Mono.just("/addReviewToWatchedFilm");

            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
            case "üé≠ –ñ–∞–Ω—Ä—ã" -> Mono.just("/addGenrePreferences");
            case "üë®‚Äçüé§ –ê–∫—Ç–µ—Ä—ã" -> Mono.just("/addActorPreferences");
            case "üåç –°—Ç—Ä–∞–Ω—ã" -> Mono.just("/addCountryPreferences");
            case "üóìÔ∏è –ì–æ–¥—ã" -> Mono.just("/addYearPreferences");

            // –ü–µ—Ä–∏–æ–¥—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            case "‚è≥ 3 –º–µ—Å—è—Ü–∞" -> Mono.just("/threeMonths");
            case "üóìÔ∏è –ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü" -> Mono.just("/lastMonth");
            case "üéâ –ü—Ä–æ—à–ª—ã–π –≥–æ–¥" -> Mono.just("/lastYear");
            case "üèÜ –í—Å–µ –≤—Ä–µ–º—è" -> Mono.just("/allPeriod");
            case "üîç –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞—Ç—ã" -> Mono.just("/exactPeriod");


            // –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
            case "üéâ –ñ–∞–Ω—Ä—ã" -> Mono.just("/chooseGenres");
            case "üåü –ê–∫—Ç–µ—Ä—ã" -> Mono.just("/chooseActors");
            case "‚≠ê –†–µ–π—Ç–∏–Ω–≥" -> Mono.just("/chooseRate");
            case "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" -> Mono.just("/chooseDuration");
            case "üìÖ –ì–æ–¥—ã" -> Mono.just("/chooseYears");
            case "üåç –°—Ç—Ä–∞–Ω–∞" -> Mono.just("/chooseCountry");
            case "\uD83D\uDC40 –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å" -> Mono.just("/showFilters");
            case "‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å" -> Mono.just("/applyFilters");

            default -> Mono.just("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã");
        };
    }
}
